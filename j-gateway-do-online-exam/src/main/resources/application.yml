#server port
server:
  port: 8763
redis:
  host: localhost
  port: 6379

#config eureka client to connect eureka server
eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      default-zone: http://localhost:8761/eureka/
    enabled: true

#config cloud gateway for router
spring:
  application.name: gate-way
#config connect to redis
  data:
    redis:
      host: localhost
      port: 50988
      connect-timeout: 2s
      timeout: 1s
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true
    gateway:
      routes:
        - id: authorization-service
          uri: http://localhost:8100/
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - AuthenticationFilter
        - id: test-service
          uri: http://localhost:8400/
          predicates:
            - Path=/test/**
          filters:
            - name: AuthenticationFilter
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 2

app:
  secret: 5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437
  openApiEndPoints: /api/v1/auth/register,/api/v1/auth/login,/eureka
  url:
    getEndPoint: http://localhost:8100/api/v1/auth/getEndPoints
