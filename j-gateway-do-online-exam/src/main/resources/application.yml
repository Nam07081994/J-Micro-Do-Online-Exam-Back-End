#server port
server:
  servlet:
    context-path: /
  port: 8763
redis:
  host: localhost
  port: 6379
#config eureka client to connect eureka server
eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      default-zone: http://localhost:8761/eureka/
    enabled: true
#spring config
spring:
  application.name: gate-way
#config connect to redis
  data:
    redis:
      host: localhost
      port: 50988
      connect-timeout: 15s
      timeout: 15s
#config for circuit breaker
  cloud:
    discovery:
      enabled: true
    circuitbreaker:
      resilience4j:
        enabled: true
        configs:
          default:
            circuitBreakerConfig:
              failureRateThreshold: 50
              waitDurationInOpenState: 15000
            timeLimiterConfig:
              timeoutDuration: 15000
#config cloud gateway for router
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000/"
            allowedHeaders: "*"
            allowedMethods: "*"
      discovery:
        locator:
          enabled: true
      routes:
        - id: authorization-service
          uri: http://localhost:8764/
          predicates:
            - Path=/api/v1/auth/**
          filters:
          #config authentication filter
            - name: CircuitBreaker
              args:
                name: authen_services_circuit_breaker
                fallbackUri: forward:/api/v1/circuit-breaker/fallback
              metadata:
                health-check-uri: /actuator/health
                health-check-header: X-Custom-Health-Check-Header
                circuit-breaker:
                  name: authen_services_circuit_breaker
                  fallback-uri: forward:/api/v1/circuit-breaker/fallback
                  reset-timeout: 5000
            - name: AuthenticationFilter
          #config rate limiter filter
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 2
#-------------------------------------------------------------------------------
        - id: exam-service
          uri: http://localhost:8765/
          predicates:
            - Path=/api/v1/exams/**
          filters:
          #config authentication filter
            - name: CircuitBreaker
              args:
                name: authen_services_circuit_breaker
                fallbackUri: forward:/api/v1/circuit-breaker/fallback
              metadata:
                health-check-uri: /actuator/health
                health-check-header: X-Custom-Health-Check-Header
                circuit-breaker:
                  name: authen_services_circuit_breaker
                  fallback-uri: forward:/api/v1/circuit-breaker/fallback
                  reset-timeout: 5000
            - name: AuthenticationFilter
          #config rate limiter filter
            #- name: RequestRateLimiter
              #args:
                #key-resolver: "#{@userKeyResolver}"
                #redis-rate-limiter.replenishRate: 2
                #redis-rate-limiter.burstCapacity: 2
#-------------------------------------------------------------------------------
        - id: file-service
          uri: http://localhost:8766/
          predicates:
            - Path=/api/v1/files/**
          filters:
          #config authentication filter
            - name: CircuitBreaker
              args:
                name: authen_services_circuit_breaker
                fallbackUri: forward:/api/v1/circuit-breaker/fallback
              metadata:
                health-check-uri: /actuator/health
                health-check-header: X-Custom-Health-Check-Header
                circuit-breaker:
                  name: authen_services_circuit_breaker
                  fallback-uri: forward:/api/v1/circuit-breaker/fallback
                  reset-timeout: 5000
            - name: AuthenticationFilter
          #config rate limiter filter
            #- name: RequestRateLimiter
              #args:
                #key-resolver: "#{@userKeyResolver}"
                #redis-rate-limiter.replenishRate: 2
                #redis-rate-limiter.burstCapacity: 2
#-------------------------------------------------------------------------------
        - id: article-service
          uri: http://localhost:8767/
          predicates:
            - Path=/api/v1/articles/**
          filters:
          #config authentication filter
            - name: CircuitBreaker
              args:
                name: authen_services_circuit_breaker
                fallbackUri: forward:/api/v1/circuit-breaker/fallback
              metadata:
                health-check-uri: /actuator/health
                health-check-header: X-Custom-Health-Check-Header
                circuit-breaker:
                  name: authen_services_circuit_breaker
                  fallback-uri: forward:/api/v1/circuit-breaker/fallback
                  reset-timeout: 5000
            - name: AuthenticationFilter
          #config rate limiter filter
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 2
#-------------------------------------------------------------------------------
        - id: notification-service
          uri: http://localhost:8768/
          predicates:
            - Path=/api/v1/notify/**
          filters:
          #config authentication filter
            - name: CircuitBreaker
              args:
                name: authen_services_circuit_breaker
                fallbackUri: forward:/api/v1/circuit-breaker/fallback
              metadata:
                health-check-uri: /actuator/health
                health-check-header: X-Custom-Health-Check-Header
                circuit-breaker:
                  name: authen_services_circuit_breaker
                  fallback-uri: forward:/api/v1/circuit-breaker/fallback
                  reset-timeout: 5000
            - name: AuthenticationFilter
          #config rate limiter filter
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 2
#openai config
springdoc:
  enable-native-support: true
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    config-url: /v3/api-docs/swagger-config
    urls:
      - url: /v3/api-docs
        name: API Gateway Service
      - url: /api/v1/auth/v3/api-docs
        name: Auth Service
      - url: /api/v1/articles/v3/api-docs
        name: Articles Service
      - url: /api/v1/exams/v3/api-docs
        name: Exams Service
      - url: /api/v1/files/v3/api-docs
        name: Files Service
      - url: /api/v1/notify/v3/api-docs
        name: Notify Service
#config
management:
  security:
    enabled: false
  server:
    port: 8763
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    shutdown:
      enabled: true
    info:
      env:
        enabled: true
      enabled: true
  endpoints:
    web:
      exposure:
        include: prometheus, metrics, info, health, shutdown, beans

app:
  redis:
    TTL: 1800
  secret: 5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437
  url:
    getEndPoint: http://localhost:8764/api/v1/auth/getEndPointsByRoles
    get-image-pattern: /api/v1/files/images/.+/.+
